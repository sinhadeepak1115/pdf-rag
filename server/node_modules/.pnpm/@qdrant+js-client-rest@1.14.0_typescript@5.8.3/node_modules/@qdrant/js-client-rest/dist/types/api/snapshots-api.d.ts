import { TypedFetch } from '@qdrant/openapi-typescript-fetch';
import { Client } from '../api-client.js';
import { components } from '../openapi/generated_schema.js';
export type SnapshotsApi = {
    createFullSnapshot: TypedFetch<{
        parameters: {
            query?: {
                wait?: boolean;
            };
        };
        responses: {
            200: {
                content: {
                    'application/json': {
                        time?: number;
                        status?: string;
                        result?: components['schemas']['SnapshotDescription'];
                    };
                };
            };
            202: {
                content: {
                    'application/json': {
                        time?: number;
                        status?: string;
                    };
                };
            };
            default: {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
            '4XX': {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
        };
    }>;
    createSnapshot: TypedFetch<{
        parameters: {
            query?: {
                wait?: boolean;
            };
            path: {
                collection_name: string;
            };
        };
        responses: {
            200: {
                content: {
                    'application/json': {
                        time?: number;
                        status?: string;
                        result?: components['schemas']['SnapshotDescription'];
                    };
                };
            };
            202: {
                content: {
                    'application/json': {
                        time?: number;
                        status?: string;
                    };
                };
            };
            default: {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
            '4XX': {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
        };
    }>;
    deleteFullSnapshot: TypedFetch<{
        parameters: {
            query?: {
                wait?: boolean;
            };
            path: {
                snapshot_name: string;
            };
        };
        responses: {
            200: {
                content: {
                    'application/json': {
                        time?: number;
                        status?: string;
                        result?: boolean;
                    };
                };
            };
            202: {
                content: {
                    'application/json': {
                        time?: number;
                        status?: string;
                    };
                };
            };
            default: {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
            '4XX': {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
        };
    }>;
    deleteSnapshot: TypedFetch<{
        parameters: {
            query?: {
                wait?: boolean;
            };
            path: {
                collection_name: string;
                snapshot_name: string;
            };
        };
        responses: {
            200: {
                content: {
                    'application/json': {
                        time?: number;
                        status?: string;
                        result?: boolean;
                    };
                };
            };
            202: {
                content: {
                    'application/json': {
                        time?: number;
                        status?: string;
                    };
                };
            };
            default: {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
            '4XX': {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
        };
    }>;
    getFullSnapshot: TypedFetch<{
        parameters: {
            path: {
                snapshot_name: string;
            };
        };
        responses: {
            200: {
                content: {
                    'application/octet-stream': string;
                };
            };
            default: {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
            '4XX': {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
        };
    }>;
    getSnapshot: TypedFetch<{
        parameters: {
            path: {
                collection_name: string;
                snapshot_name: string;
            };
        };
        responses: {
            200: {
                content: {
                    'application/octet-stream': string;
                };
            };
            default: {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
            '4XX': {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
        };
    }>;
    listFullSnapshots: TypedFetch<{
        responses: {
            200: {
                content: {
                    'application/json': {
                        usage?: components['schemas']['HardwareUsage'] | (Record<string, unknown> | null);
                        time?: number;
                        status?: string;
                        result?: components['schemas']['SnapshotDescription'][];
                    };
                };
            };
            default: {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
            '4XX': {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
        };
    }>;
    listSnapshots: TypedFetch<{
        parameters: {
            path: {
                collection_name: string;
            };
        };
        responses: {
            200: {
                content: {
                    'application/json': {
                        usage?: components['schemas']['HardwareUsage'] | (Record<string, unknown> | null);
                        time?: number;
                        status?: string;
                        result?: components['schemas']['SnapshotDescription'][];
                    };
                };
            };
            default: {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
            '4XX': {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
        };
    }>;
    recoverFromUploadedSnapshot: TypedFetch<{
        parameters: {
            query?: {
                wait?: boolean;
                priority?: components['schemas']['SnapshotPriority'];
                checksum?: string;
            };
            path: {
                collection_name: string;
            };
        };
        requestBody?: {
            content: {
                'multipart/form-data': {
                    snapshot?: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    'application/json': {
                        time?: number;
                        status?: string;
                        result?: boolean;
                    };
                };
            };
            202: {
                content: {
                    'application/json': {
                        time?: number;
                        status?: string;
                    };
                };
            };
            default: {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
            '4XX': {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
        };
    }>;
    recoverFromSnapshot: TypedFetch<{
        parameters: {
            query?: {
                wait?: boolean;
            };
            path: {
                collection_name: string;
            };
        };
        requestBody?: {
            content: {
                'application/json': components['schemas']['SnapshotRecover'];
            };
        };
        responses: {
            200: {
                content: {
                    'application/json': {
                        time?: number;
                        status?: string;
                        result?: boolean;
                    };
                };
            };
            202: {
                content: {
                    'application/json': {
                        time?: number;
                        status?: string;
                    };
                };
            };
            default: {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
            '4XX': {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
        };
    }>;
    recoverShardFromUploadedSnapshot: TypedFetch<{
        parameters: {
            query?: {
                wait?: boolean;
                priority?: components['schemas']['SnapshotPriority'];
                checksum?: string;
            };
            path: {
                collection_name: string;
                shard_id: number;
            };
        };
        requestBody?: {
            content: {
                'multipart/form-data': {
                    snapshot?: string;
                };
            };
        };
        responses: {
            200: {
                content: {
                    'application/json': {
                        time?: number;
                        status?: string;
                        result?: boolean;
                    };
                };
            };
            202: {
                content: {
                    'application/json': {
                        time?: number;
                        status?: string;
                    };
                };
            };
            default: {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
            '4XX': {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
        };
    }>;
    recoverShardFromSnapshot: TypedFetch<{
        parameters: {
            query?: {
                wait?: boolean;
            };
            path: {
                collection_name: string;
                shard_id: number;
            };
        };
        requestBody?: {
            content: {
                'application/json': components['schemas']['ShardSnapshotRecover'];
            };
        };
        responses: {
            200: {
                content: {
                    'application/json': {
                        time?: number;
                        status?: string;
                        result?: boolean;
                    };
                };
            };
            202: {
                content: {
                    'application/json': {
                        time?: number;
                        status?: string;
                    };
                };
            };
            default: {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
            '4XX': {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
        };
    }>;
    listShardSnapshots: TypedFetch<{
        parameters: {
            path: {
                collection_name: string;
                shard_id: number;
            };
        };
        responses: {
            200: {
                content: {
                    'application/json': {
                        usage?: components['schemas']['HardwareUsage'] | (Record<string, unknown> | null);
                        time?: number;
                        status?: string;
                        result?: components['schemas']['SnapshotDescription'][];
                    };
                };
            };
            default: {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
            '4XX': {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
        };
    }>;
    createShardSnapshot: TypedFetch<{
        parameters: {
            query?: {
                wait?: boolean;
            };
            path: {
                collection_name: string;
                shard_id: number;
            };
        };
        responses: {
            200: {
                content: {
                    'application/json': {
                        time?: number;
                        status?: string;
                        result?: components['schemas']['SnapshotDescription'];
                    };
                };
            };
            202: {
                content: {
                    'application/json': {
                        time?: number;
                        status?: string;
                    };
                };
            };
            default: {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
            '4XX': {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
        };
    }>;
    getShardSnapshot: TypedFetch<{
        parameters: {
            path: {
                collection_name: string;
                shard_id: number;
                snapshot_name: string;
            };
        };
        responses: {
            200: {
                content: {
                    'application/octet-stream': string;
                };
            };
            default: {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
            '4XX': {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
        };
    }>;
    deleteShardSnapshot: TypedFetch<{
        parameters: {
            query?: {
                wait?: boolean;
            };
            path: {
                collection_name: string;
                shard_id: number;
                snapshot_name: string;
            };
        };
        responses: {
            200: {
                content: {
                    'application/json': {
                        time?: number;
                        status?: string;
                        result?: boolean;
                    };
                };
            };
            202: {
                content: {
                    'application/json': {
                        time?: number;
                        status?: string;
                    };
                };
            };
            default: {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
            '4XX': {
                content: {
                    'application/json': components['schemas']['ErrorResponse'];
                };
            };
        };
    }>;
};
export declare function createSnapshotsApi(client: Client): SnapshotsApi;
