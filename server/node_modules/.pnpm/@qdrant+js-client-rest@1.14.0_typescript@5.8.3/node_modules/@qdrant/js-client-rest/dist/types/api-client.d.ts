import { Fetcher } from '@qdrant/openapi-typescript-fetch';
import { paths } from './openapi/generated_schema.js';
import { ClusterApi } from './api/cluster-api.js';
import { CollectionsApi } from './api/collections-api.js';
import { PointsApi } from './api/points-api.js';
import { ServiceApi } from './api/service-api.js';
import { SnapshotsApi } from './api/snapshots-api.js';
import { ShardsApi } from './api/shards-api.js';
import { RestArgs } from './types.js';
export type Client = ReturnType<typeof Fetcher.for<paths>>;
type ClientApi = {
    cluster: ClusterApi;
    collections: CollectionsApi;
    points: PointsApi;
    service: ServiceApi;
    snapshots: SnapshotsApi;
    shards: ShardsApi;
};
export declare function createApis(baseUrl: string, args: RestArgs): ClientApi;
export type OpenApiClient = ReturnType<typeof createApis>;
export declare function createClient(baseUrl: string, { headers, timeout, connections }: RestArgs): Client;
export {};
